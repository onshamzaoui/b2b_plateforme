generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      Role
  companyName String?   
  missions  Mission[] @relation("CompanyMissions")
  applications Application[]
  invoices Invoice[]
  createdAt DateTime  @default(now())

}

model Mission {
  id               String        @id @default(uuid())
  title            String
  description      String
  budget           Float
  status           MissionStatus @default(PUBLISHED)
  company          User          @relation("CompanyMissions", fields: [companyId], references: [id])
  companyId        String

  requirements     String?       // ← nouveau
  projectContext   String?       // ← nouveau
  skills           String[]      // ← nouveau
  location         String?       // ← nouveau
  startDate        String?       // ← nouveau
  duration         String?       // ← nouveau
  pricing          String?       // ← nouveau
  publishedAt      DateTime?     // ← nouveau
  companyLogo      String?       // ← nouveau
  companyDescription String?     // ← nouveau

  applications     Application[]
  createdAt        DateTime      @default(now())
}


model Application {
  id          String   @id @default(uuid())
  appliedAt   DateTime @default(now())
  status      String   @default("Nouveau") // Nouveau, Contacté, Refusé
  dailyRate   Int
  availability String?
  matchScore  Int
  motivation  String?
  experience  String?
  portfolio   String[]
  skills      String[]

  // Relations
  missionId   String
  mission     Mission  @relation(fields: [missionId], references: [id])
  freelancerId String
  freelancer   User     @relation(fields: [freelancerId], references: [id])
}


model Invoice {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  amount     Float
  status     InvoiceStatus @default(PENDING)
  issuedAt   DateTime @default(now())
}

enum Role {
  FREELANCE
  ENTREPRISE
  ADMIN
}

enum AppStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum MissionStatus {
  PUBLISHED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum InvoiceStatus {
  PENDING
  PAID
  CANCELLED
}
